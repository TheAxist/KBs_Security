With paramaterized queries.
We dont want to use concatonated strings which opens the door for SQLi attacks.


ic partial class WebForm1 : System.Web.UI.Page

Protected void Page_load(object sender, EventArgs e)
{

}

Protected void Button1_click(object Sender, EventArgs e)
{
	string ConnectionString = ConfigurationManager.ConnectionString["DBCS"].ConnectionString;
	using (SqlConnection connection = new SqlConnection(ConnectionString))
	{
		SqlCommand cmd = new SqlCommand("Select * from tblProductInventory where ProductName like @ProductName", connection);
		'We have to supply the value for our newly created parameter "@ProductName"
		cmd.Paramaters.AddWithValue("@ProductName", TextBox1.Text + "%");
		'The "TextBox1" is the user supplied input. Now whatever input the user supplies, is going to only be only passed into the "ProductName" column.
		'No SQL query can escape the column
		connection.open();
		'We will want to ensure the connection to our database is open
		GridView1.DataSource = cmd.ExecuteReader();
		GridView1.DataBind();
	}
}